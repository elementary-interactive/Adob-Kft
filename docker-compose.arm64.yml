# Custom Docker Compose file for ARM64 architecture (Apple Silicon M1, M2, Raspberry Pi 4, etc.)
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: php
    deploy:
      resources:
        reservations:
          memory: 256M
    container_name: adobkft_app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      APP_DEBUG: 1
    working_dir: /var/www
    expose:
        - "9000"
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ~/.ssh:/home/www/.ssh
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: arm64v8/nginx
    container_name: adobkft_webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: arm64v8/mysql:8.0
    container_name: adobkft_db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: adobkft
      MYSQL_ROOT_PASSWORD: your_mysql_root_password
      MYSQL_PASSWORD: your_mysql_root_password
      MYSQL_USER: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./:/var/www
      - dbdata:/var/lib/mysql
    networks:
      - app-network

  cache:
    image: arm64v8/redis:7-alpine
    container_name: adobkft_cache
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning
    networks:
      - app-network

  phpmyadmin:
      image: phpmyadmin:latest
      container_name: phpmyadmin
      ports:
          # 8080 is the host port and 80 is the docker port
          - 8080:80
      environment:
          PMA_HOST: adobkft_db
          UPLOAD_LIMIT: 20M
          MYSQL_USERNAME: root
          MYSQL_ROOT_PASSWORD: your_mysql_root_password
      restart: unless-stopped
      networks:
          # define your network where all containers are connected to each other
          - app-network


  # memcached:
  #   image: memcached
  #   container_name: adobkft_cache
  #   ports:
  #     - "11211:11211"
  #   networks:
  #     - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local


services:

  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: php:latest
    deploy:
      resources:
        reservations:
          memory: 256M
    container_name: adobkft_app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: prod
      APP_DEBUG: 0
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ~/.ssh:/home/www/.ssh
    networks:
      - app-network

  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: adobkft_webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  # MySQL Service
  db:
    image: mysql:8.4
    container_name: adobkft_db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: prod
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - app-network

  # Redis Service
  cache:
    image: redis:7.4-alpine
    container_name: adobkft_cache
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning
    networks:
      - app-network

  # phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: adobkft_db
      UPLOAD_LIMIT: 20M
      MYSQL_USERNAME: ${DB_USERNAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    restart: unless-stopped
    networks:
      - app-network


# Docker Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local
